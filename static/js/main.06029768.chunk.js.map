{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/About.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","className","role","alert","type","Navbar","mode","to","title","id","aboutText","placeholder","onClick","togglemode","htmlFor","About","useState","color","backgroundColor","border","borderRadius","mystyle","setmystyle","btntext","setbtntext","style","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","toUpperCase","toLowerCase","newtext","split","join","ch","i","length","String","fromCharCode","charCodeAt","st","document","getElementById","select","setselectionRange","navigator","clipboard","writeText","App","DarkMode","setDarkMode","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.06029768.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>{props.alert}</strong> \r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.togglemode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            \r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n};\r\n","// import React from \"react\";\r\nimport React, { useState } from \"react\";\r\n// import { useState } from \"react/cjs/react.development\";\r\n\r\nexport default function About() {\r\n  const [mystyle, setmystyle] = useState({\r\n    color:'white', \r\n    backgroundColor:'black',\r\n    border:'2px solid blue',\r\n    borderRadius:'5px'\r\n  })\r\n  const [btntext, setbtntext] = useState(\"Enable white mode\")\r\n  \r\n  const toggleStyle=()=>{\r\n    if(mystyle.color==='white'){\r\n      setmystyle({\r\n        color:'black',\r\n        backgroundColor:'white',\r\n        border:'2px solid blue',\r\n    borderRadius:'5px'\r\n      })\r\n      setbtntext(\"Enable dark mode\")\r\n    }\r\n    else{\r\n      setmystyle({\r\n        color:'white',\r\n        backgroundColor:'black',\r\n        border:'2px solid white',\r\n    borderRadius:'5px'\r\n      })\r\n      setbtntext(\"Enable light mode\")\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={mystyle}>\r\n      <h2 className=\"my-2\">About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={mystyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      <div className=\"container\">\r\n\r\n      <button \r\n      onClick={toggleStyle}\r\n      type=\"button\" \r\n      className=\"btn btn-primary my-2\"\r\n      >{btntext}</button>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleArrange = () => {\r\n    setText(text.toLowerCase());\r\n    // for(let i=0;i<text.length;i++){\r\n    //   if(i===0 ||(text[i-1]===\" \" &&text[i-2]===\".\")){\r\n    //     if (text[i] >= 'a' && text[i] <= 'z')\r\n    //   {\r\n    //     // Convert into Upper-case\r\n    //     text[i] = String.fromCharCode(text[i].charCodeAt(0) - 'a'.charCodeAt(0) + 'A'.charCodeAt(0));\r\n    //   }\r\n    //   }\r\n      \r\n    // }\r\n    let ch = text.split(\"\");\r\n        for (let i = 0; i < text.length; i++) {\r\n  \r\n            // If first character of a word is found\r\n            if (i === 0 && ch[i] != ' ' ||\r\n                ch[i] != ' ' && ch[i - 1] == ' '&&ch[i-2]==\".\") {\r\n  \r\n                // If it is in lower-case\r\n                if (ch[i] >= 'a' && ch[i] <= 'z') {\r\n  \r\n                    // Convert into Upper-case\r\n                    ch[i] = String.fromCharCode(ch[i].charCodeAt(0) - 'a'.charCodeAt(0) + 'A'.charCodeAt(0));\r\n                }\r\n            }\r\n  \r\n            // If apart from first character\r\n            // Any one is in Upper-case\r\n            else if (ch[i] >= 'A' && ch[i] <= 'Z')\r\n  \r\n                // Convert into Lower-Case\r\n                ch[i] = String.fromCharCode(ch[i].charCodeAt(0) + 'a'.charCodeAt(0) - 'A'.charCodeAt(0));          \r\n        }\r\n  \r\n        // Convert the char array to equivalent String\r\n        let st = (ch).join(\"\");\r\n        setText(st);\r\n  };\r\n  const handleUpClick = () => {\r\n    console.log(\"UpperCase was clicked\"+text.toUpperCase());\r\n    setText(text.toUpperCase());\r\n  };\r\n  const handleLowClick = () => {\r\n    console.log(\"UpperCase was clicked\"+text.toLowerCase());\r\n    setText(text.toLowerCase());\r\n  };\r\n  const handleExtraSpace = () => {\r\n   let newtext=text.split(/[ ]+/);\r\n   setText(newtext.join(\" \"))\r\n  };\r\n  const handleCopy = () => {\r\n    var text=document.getElementById(\"Mybox\").value;\r\n    text.select();\r\n    text.setselectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    console.log(\"I am copy\");\r\n  };\r\n  const handOnChange = (event) => {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div style={{color:props.mode==='light'?'#000865':'white'}}>\r\n      <h2>{props.heading}</h2>\r\n      <div className=\"form-group mb-3\">\r\n        <label htmlFor=\"My Box\">Example textarea</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{backgroundColor:props.mode==='light'?'white':'grey',\r\n          color:props.mode==='light'?'#000865':'white'}}\r\n          id=\"MyBox\"\r\n          value={text}\r\n          placeholder={`Enter the text here`}\r\n          onChange={handOnChange}\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n        convert to uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n        convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>\r\n        Remove Extra Space\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleArrange}>\r\n        Rearrange the text\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2\" \r\n      id=\"Mybox\"\r\n      onClick={handleCopy}>\r\n        Copy Text\r\n      </button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='light'?'#000865':'white'}}>\r\n      <h3>Your text summary</h3>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{text.split(\" \").length*0.008} minutes read</p>\r\n      <h4>Preview</h4>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Alert from \"./components/Alert\";\nimport Navbar from './components/Navbar'\nimport About from './components/About';\nimport TextForm from \"./components/TextForm\";\n// let name=\"Aditya\"\nfunction App() {\n  const [DarkMode, setDarkMode] = useState('light');\n  const togglemode=()=>{\n    if(DarkMode==='light'){\n      setDarkMode('dark');\n      document.body.style.backgroundColor=\"#000865\";\n    }\n    else{\n      setDarkMode('light');\n      document.body.style.backgroundColor=\"white\";\n    }\n  }\n  return (\n    <>\n      <Router>\n        \n      <Navbar title=\"text utils\" aboutText=\"about\" togglemode={togglemode} mode={DarkMode} />\n      <Alert alert=\"This is alert\"/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n        <TextForm heading=\"Enter the text to analyze\" mode={DarkMode}/>\n            \n          </Route>\n        </Switch>\n        {/* <About/> */}\n        \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n// {/* <>\n// {/* <h1> this is heading</h1> */}\n// <div className=\"App\">\n//   <header className=\"App-header\">\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     <p>\n//       Edit <code>src/App.js</code> and save to reload.\n//     </p>\n//     <a\n//       className=\"App-link\"\n//       href=\"https://reactjs.org\"\n//       target=\"_blank\"\n//       rel=\"noopener noreferrer\"\n//     >\n//       Learn React with aditya\n//     </a>\n//   </header>\n// </div>\n// </> */}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}